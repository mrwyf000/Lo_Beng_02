package com.example.login;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class RegistrationActivity extends AppCompatActivity implements OnMapReadyCallback {

    //initialize Variable
    GoogleMap gMap;

    private EditText userName, userEmail, userPassword, carparkAddress, carparkName;
    private Button nextButton;
    private FirebaseAuth firebaseAuth;

    String name, email, password, address, parkname;

    private void setupUIViews() {
        userName = (EditText) findViewById(R.id.edUserName);
        userEmail = (EditText) findViewById(R.id.edUserEmail);
        userPassword = (EditText) findViewById(R.id.edUserPassword);
        carparkName = (EditText) findViewById(R.id.edCarParkName);
        carparkAddress = (EditText) findViewById(R.id.edAddress);
        nextButton = (Button) findViewById(R.id.btNext);

    }

    private boolean validate() {
        boolean result = false;

        name = userName.getText().toString();
        email = userEmail.getText().toString();
        password = userPassword.getText().toString();
        address = carparkAddress.getText().toString();
        parkname = carparkName.getText().toString();


        if (name.isEmpty() || password.isEmpty() || email.isEmpty() || address.isEmpty() || parkname.isEmpty()) {
            Toast.makeText(this, "please enter all the details", Toast.LENGTH_SHORT).show();
        } else {
            result = true;
        }

        return result;
    }

    //upload data
    private void sendSendUserData() {
        FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();
        DatabaseReference myRef = firebaseDatabase.getReference(firebaseAuth.getUid());
        UserProfile userProfile = new UserProfile(name, email, parkname, address);
        myRef.setValue(userProfile);
    }

        @Override
        protected void onCreate (Bundle savedInstanceState){
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_registration);

            //Obtain the SupportMapFragment
            SupportMapFragment supportMapFragment = (SupportMapFragment)
                    getSupportFragmentManager().findFragmentById(R.id.google_map);
            supportMapFragment.getMapAsync(this);


            setupUIViews();

            firebaseAuth = FirebaseAuth.getInstance();

            nextButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    if (validate()) {
                        //Upload data to the database
                        String user_email = userEmail.getText().toString().trim();
                        String user_password = userPassword.getText().toString().trim();

                        firebaseAuth.createUserWithEmailAndPassword(user_email, user_password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                            @Override
                            public void onComplete(@NonNull Task<AuthResult> task) {
                                if (task.isSuccessful()) {
                                    sendSendUserData();
                                    Toast.makeText(RegistrationActivity.this, "Registration Successful", Toast.LENGTH_SHORT).show();
                                    startActivity(new Intent(RegistrationActivity.this, RegistrationActivity2.class));
                                } else {
                                    Toast.makeText(RegistrationActivity.this, "Registration Failed", Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
                    }

                }
            });


        }


        @Override
        public void onMapReady (GoogleMap googleMap){
            //Assign Variable
            gMap = googleMap;

            gMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
                @Override
                public void onMapClick(LatLng latLng) {
                    //Creating Marker
                    MarkerOptions markerOptions = new MarkerOptions();
                    //Set Marker Position
                    markerOptions.position(latLng);
                    //Set Latitude And Longitude On Marker
                    markerOptions.title(latLng.latitude + " : " + latLng.longitude);
                    //Clear the Previously Click position
                    gMap.clear();
                    //Zoom the Marker
                    gMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng, 10));
                    //Add Marker On Map
                    gMap.addMarker(markerOptions);
                }
            });
        }
    }
}
